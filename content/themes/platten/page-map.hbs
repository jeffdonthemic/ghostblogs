{{!< default}}
{{> header}}

<script src="http://maps.google.com/maps?file=api&v=2&key=" 
  type="text/javascript"></script>

<script type="text/javascript">
//<![CDATA[
var locationMap;
var locationMapMarkers = [];
var locationMapHTMLS = [];

// Create a base icon for all of our markers that specifies the
// shadow, icon dimensions, etc.
var cm_baseIcon = new GIcon();
cm_baseIcon.shadow = "http://www.google.com/mapfiles/shadow50.png";
cm_baseIcon.iconSize = new GSize(20, 34);
cm_baseIcon.shadowSize = new GSize(37, 34);
cm_baseIcon.iconAnchor = new GPoint(9, 34);
cm_baseIcon.infoWindowAnchor = new GPoint(30, 10);
cm_baseIcon.infoShadowAnchor = new GPoint(40, 50);

/**
 * Loads map and calls function to load in worksheet data.
 */
function loadMap() {  
  getHomeJSON();
  if (GBrowserIsCompatible()) {
    // create the map
    locationMap = new GMap2(document.getElementById("locationMap"));
    locationMap.addControl(new GLargeMapControl());
    locationMap.addControl(new GMapTypeControl());
    getLocationJSON();
  } else {
    alert("Sorry, the Google Maps API is not compatible with this browser");
  } 
}

/**
 * Function called when marker on the map is clicked.
 * Opens an info window (bubble) above the marker.
 * @param {Number} markerNum Number of marker in global array
 */
function markerClicked(markerNum) {
  locationMapMarkers[markerNum].openInfoWindowHtml(locationMapHTMLS[markerNum]);
}

/**
 * Creates marker with ranked Icon or blank icon,
 * depending if rank is defined. Assigns onclick function.
 * @param {GLatLng} point Point to create marker at
 * @param {String} title Tooltip title to display for marker
 * @param {String} html HTML to display in InfoWindow
 * @param {Number} rank Number rank of marker, used in creating icon
 * @return {GMarker} Marker created
 */
function createMarker(point, title, html, rank) {
  var markerOpts = {};
  var nIcon = new GIcon(cm_baseIcon);

  nIcon.imageOut = "http://gmaps-samples.googlecode.com/svn/trunk/" +
      "markers/green/blank.png";
  nIcon.imageOver = "http://gmaps-samples.googlecode.com/svn/trunk/" +
      "markers/orange/blank.png";
  nIcon.image = nIcon.imageOut;

  markerOpts.icon = nIcon;
  markerOpts.title = title;    
  var marker = new GMarker(point, markerOpts);
  
  GEvent.addListener(marker, "click", function() {
    marker.openInfoWindowHtml(html);
  });
  GEvent.addListener(marker, "mouseover", function() {
    marker.setImage(marker.getIcon().imageOver);
  });
  GEvent.addListener(marker, "mouseout", function() {
    marker.setImage(marker.getIcon().imageOut);
  });
  GEvent.addListener(marker, "infowindowopen", function() {
    marker.setImage(marker.getIcon().imageOver);
  });
  GEvent.addListener(marker, "infowindowclose", function() {
    marker.setImage(marker.getIcon().imageOut);
  });
  return marker;
}

/**
 * Calls appery db and fetches places data
 */
function getLocationJSON() {

  $.ajax({
    url: 'https://api.appery.io/rest/1/db/collections/locations?limit=1500',
    type: 'GET',
    headers: {"X-Appery-Database-Id": "537492bfe4b0d2288dcd4e87"},
    success: function(data, textStatus) {
      loadLocationMap(data);
    },
    error: function(textStatus, errorThrown) {
      console.log('Error');
    }
  });

}

/**
 * Calls appery db and fetches 'home' data
 */
function getHomeJSON() {

  $.ajax({
    url: 'https://api.appery.io/rest/1/db/collections/home?sort=-_createdAt',
    type: 'GET',
    headers: {"X-Appery-Database-Id": "537492bfe4b0d2288dcd4e87"},
    success: function(data, textStatus) {
      for (i=0; i<data.length; i++) {
        $("#homeLocations").append('<li>' + data[i].name + ' - ' + moment(data[i].date).format("MMMM Do YYYY"));
      }
    },
    error: function(textStatus, errorThrown) {
      console.log('Error');
    }
  });

}

/** 
 * Called when JSON is loaded. Creates sidebar if param_sideBar is true.
 * Sorts rows if param_rankColumn is valid column. Iterates through worksheet rows, 
 * creating marker and sidebar entries for each row.
 * @param {JSON} json Worksheet feed
 */       
function loadLocationMap(json) {
  var bounds = new GLatLngBounds();   

  for (var i = 0; i < json.length; i++) {
    var entry = json[i];
    var lat = parseFloat(entry.location[0]);
    var lng = parseFloat(entry.location[1]);
    var point = new GLatLng(lat,lng);
    var html = "<div style='font-size:12px'>";
    html += "<strong>" + entry.description + "</strong>";
    var d = new Date(entry.date);
    html += "<br/>" + d.toLocaleString("en-US", {year: "numeric", month: "long", day: "numeric"});
    var label = entry.description;
    html += "</div>";

    // create the marker
    var marker = createMarker(point,label,html,0);
    locationMap.addOverlay(marker);
    locationMapMarkers.push(marker);
    locationMapHTMLS.push(html);
    bounds.extend(point);

  }

  locationMap.setZoom(locationMap.getBoundsZoomLevel(bounds));
  locationMap.setCenter(bounds.getCenter());
}

setTimeout('loadMap()', 500); 

//]]>

</script>

<section class="page-content primary" role="main">

  <article id="post-{{id}}" class="post {{post_class}}" role="article" itemscope itemtype="http://schema.org/Article">

    {{#post}}

      <div class="post-thumbnail">
          {{content words = "0"}}
        </div>

        <div class="content-wrapper">

          <h2 class="post-title">
            {{title}}
          </h2>

          <div class="post-meta"></div>

          <div class="post-content" itemprop="articleBody">

          {{content}}

        </div>

        <ul id="homeLocations"></ul>

        <div id="locationMap" style="width:100%; height:400px"></div>

          <aside class="post-aside">

          <div id="disqus_thread" class="comments"></div>
          <script type="text/javascript">//<![CDATA[
            if ( disqus.activate ) {
                var disqus_shortname = disqus.shortname;
              var disqus_identifier = '{{id}}';

                /* * * DON'T EDIT BELOW THIS LINE * * */
                (function () {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
              }());
              }
          //]]></script>

          </aside>

      </div>

    {{/post}}

  </article>

  {{> footer}}

</section>